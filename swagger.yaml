openapi: 3.0.3
info:
  title: Appointment Agent API
  version: "1.0.1"
  description: |
    預約 Agent API，支援建立用戶、建立/查詢/取消預約。
    所有端點都定義了 4xx 與 5xx 的錯誤回應格式。

servers:
  - url: https://api.example.com

components:
  responses:
    BadRequest:
      description: 請求參數錯誤 (400)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code: { type: string, example: bad_request }
                  message: { type: string, example: 請求參數錯誤 }
    Unauthorized:
      description: 未授權 (401)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code: { type: string, example: unauthorized }
                  message: { type: string, example: 未授權存取 }
    Forbidden:
      description: 禁止存取 (403)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code: { type: string, example: forbidden }
                  message: { type: string, example: 無權限存取 }
    NotFound:
      description: 找不到資源 (404)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code: { type: string, example: not_found }
                  message: { type: string, example: 查無資料 }
    Conflict:
      description: 資源衝突 (409)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code: { type: string, example: conflict }
                  message: { type: string, example: 資源已存在或狀態衝突 }
    Unprocessable:
      description: 驗證錯誤 (422)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code: { type: string, example: invalid_request }
                  message: { type: string, example: Validation failed }
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field: { type: string, example: phone }
                        issue: { type: string, example: invalid_format }
    InternalError:
      description: 伺服器內部錯誤 (500)
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code: { type: string, example: internal_error }
                  message: { type: string, example: 系統內部錯誤，請稍後再試 }

paths:
  /appointments/create:
    post:
      summary: 建立預約
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [clientName, phone, serviceId, locationId, date]
              properties:
                clientName: { type: string }
                phone: { type: string }
                serviceId: { type: string }
                locationId: { type: string }
                date: { type: string, format: date-time }
      responses:
        "200":
          description: 預約成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointmentId: { type: string }
                  status: { type: string, example: booked }
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "409": { $ref: "#/components/responses/Conflict" }
        "422": { $ref: "#/components/responses/Unprocessable" }
        "500": { $ref: "#/components/responses/InternalError" }

  /clients/create:
    post:
      summary: 建立用戶資訊
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, phone]
              properties:
                name: { type: string }
                phone: { type: string }
      responses:
        "200":
          description: 成功建立
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    type: object
                    properties:
                      id: { type: string }
                      name: { type: string }
                      phone: { type: string }
                      email: { type: string }
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "409": { $ref: "#/components/responses/Conflict" }
        "422": { $ref: "#/components/responses/Unprocessable" }
        "500": { $ref: "#/components/responses/InternalError" }

  /clients/{phone}:
    get:
      summary: 取得用戶資訊
      parameters:
        - in: path
          name: phone
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  client:
                    type: object
                    properties:
                      id: { type: string }
                      name: { type: string }
                      phone: { type: string }
                      latestAppointmentId: { type: string }
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "500": { $ref: "#/components/responses/InternalError" }

  /clients/list/{phone}:
    get:
      summary: 取得用戶所有預約
      parameters:
        - in: path
          name: phone
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 預約紀錄列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointmentList:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: string }
                        name: { type: string }
                        phone: { type: string }
                        latestAppointmentId: { type: string }
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "500": { $ref: "#/components/responses/InternalError" }

  /appointments/services:
    get:
      summary: 取得可預約的服務清單
      parameters:
        - in: query
          name: orgId
          required: true
          schema:
            type: string
          description: 組織 ID
      responses:
        "200":
          description: 成功取得服務清單
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: string, example: svc_pico_laser }
                        name: { type: string, example: 皮秒雷射 }
                        type:
                          type: string
                          description: 服務類型 (person = 一對一服務, class = 多人課程)
                          enum: [person, class]
                          example: person
                        durationMinutes: { type: integer, example: 60 }
                        slots:
                          type: array
                          items:
                            type: object
                            properties:
                              id: { type: string, example: slot_20250820_1000 }
                              date: { type: string, example: "2025/08/20" }
                              startTime: { type: string, example: "10:00" }
                              endTime: { type: string, example: "11:00" }
                              location:
                                type: object
                                properties:
                                  room: { type: string, example: A診間 }
                                  branch: { type: string, example: 仁愛店 }
                              maxBooking: { type: integer, example: 1 }
                              currentBooking: { type: integer, example: 1 }
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "500": { $ref: "#/components/responses/InternalError" }

  /appointments/slots/{service}/{phone}:
    get:
      summary: 取得可以預約的時段
      parameters:
        - in: path
          name: service
          required: true
          schema: { type: string }
        - in: path
          name: phone
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 可預約時段
          content:
            application/json:
              schema:
                type: object
                properties:
                  available_slots:
                    type: array
                    items:
                      type: object
                      properties:
                        date: { type: string }
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "500": { $ref: "#/components/responses/InternalError" }

  /appointments/success/{appointmentId}:
    get:
      summary: 取得成功預約的卡片資訊
      parameters:
        - in: path
          name: appointmentId
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 預約成功資訊卡片
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "500": { $ref: "#/components/responses/InternalError" }

  /appointments/{appointmentId}:
    get:
      summary: 取得特定預約資訊
      parameters:
        - in: path
          name: appointmentId
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 單筆預約資訊
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "500": { $ref: "#/components/responses/InternalError" }

    delete:
      summary: 取消預約
      parameters:
        - in: path
          name: appointmentId
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 取消成功
        "400": { $ref: "#/components/responses/BadRequest" }
        "401": { $ref: "#/components/responses/Unauthorized" }
        "403": { $ref: "#/components/responses/Forbidden" }
        "404": { $ref: "#/components/responses/NotFound" }
        "500": { $ref: "#/components/responses/InternalError" }
